"use client";

import { useState } from "react";
import { MealPreset } from "@/services/PresetService";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Loader2, Sparkles, Star } from "lucide-react";

interface PresetSelectorProps {
  open: boolean;
  onClose: () => void;
  onSelect: (preset: MealPreset) => void;
  presets: MealPreset[];
  isLoading?: boolean;
  mealType?: string;
}

export const PresetSelector = ({
  open,
  onClose,
  onSelect,
  presets,
  isLoading = false,
  mealType,
}: PresetSelectorProps) => {
  const [selectedId, setSelectedId] = useState<number | null>(null);

  const handleSelect = () => {
    const selected = presets.find((p) => p.id === selectedId);
    if (selected) {
      onSelect(selected);
      onClose();
      setSelectedId(null);
    }
  };

  // Separate auto-generated and manual presets
  const autoPresets = presets.filter((p) => p.isAutoGenerated);
  const manualPresets = presets.filter((p) => !p.isAutoGenerated);

  return (
    <Dialog open={open} onOpenChange={onClose}>
      <DialogContent className="max-w-2xl max-h-[80vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="text-xl font-bold">
            âš¡ {mealType || "Ã–ÄŸÃ¼n"} Preset'leri
          </DialogTitle>
          <p className="text-sm text-gray-600">
            HazÄ±r kombinasyonlardan birini seÃ§in
          </p>
        </DialogHeader>

        <div className="mt-4 space-y-6">
          {isLoading ? (
            <div className="flex justify-center items-center py-8">
              <Loader2 className="h-6 w-6 animate-spin text-gray-400" />
              <span className="ml-2 text-gray-500">
                Preset'ler yÃ¼kleniyor...
              </span>
            </div>
          ) : presets.length === 0 ? (
            <div className="text-center py-12 text-gray-500">
              <Sparkles className="h-12 w-12 mx-auto mb-3 text-gray-300" />
              <p>HenÃ¼z preset bulunmuyor</p>
              <p className="text-sm mt-1">
                Daha fazla diyet yazdÄ±kÃ§a sistem otomatik preset'ler oluÅŸturacak
              </p>
            </div>
          ) : (
            <>
              {/* Auto-generated presets */}
              {autoPresets.length > 0 && (
                <div>
                  <h3 className="text-sm font-semibold text-gray-700 mb-3 flex items-center">
                    <Sparkles className="h-4 w-4 mr-1 text-purple-500" />
                    AkÄ±llÄ± Sistem Ã–nerileri
                  </h3>
                  <div className="space-y-2">
                    {autoPresets.map((preset) => (
                      <div
                        key={preset.id}
                        className={`border rounded-lg p-4 cursor-pointer transition-all ${
                          selectedId === preset.id
                            ? "border-indigo-500 bg-indigo-50"
                            : "border-gray-200 hover:border-indigo-300 hover:bg-gray-50"
                        }`}
                        onClick={() => setSelectedId(preset.id)}
                      >
                        <div className="flex items-start justify-between">
                          <div className="flex-1">
                            <div className="flex items-center gap-2">
                              <h4 className="font-medium text-gray-900">
                                {preset.name}
                              </h4>
                              {preset.patternScore &&
                                preset.patternScore >= 70 && (
                                  <Star className="h-4 w-4 text-yellow-500 fill-yellow-500" />
                                )}
                            </div>
                            <div className="mt-2 space-y-1">
                              {preset.items.map((item, idx) => (
                                <div
                                  key={idx}
                                  className="text-sm text-gray-600"
                                >
                                  â€¢ {item.besinName} {item.miktar} {item.birim}
                                </div>
                              ))}
                            </div>
                            <div className="flex gap-3 mt-2 text-xs text-gray-500">
                              {preset.patternScore && (
                                <span className="text-purple-600 font-medium">
                                  %{Math.round(preset.patternScore)} benzerlik
                                </span>
                              )}
                              {preset.usageCount > 0 && (
                                <span>{preset.usageCount}Ã— kullanÄ±ldÄ±</span>
                              )}
                            </div>
                          </div>
                          {selectedId === preset.id && (
                            <div className="ml-2">
                              <div className="h-5 w-5 rounded-full bg-indigo-600 flex items-center justify-center">
                                <svg
                                  className="h-3 w-3 text-white"
                                  fill="currentColor"
                                  viewBox="0 0 20 20"
                                >
                                  <path
                                    fillRule="evenodd"
                                    d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                    clipRule="evenodd"
                                  />
                                </svg>
                              </div>
                            </div>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              {/* Manual presets */}
              {manualPresets.length > 0 && (
                <div>
                  <h3 className="text-sm font-semibold text-gray-700 mb-3">
                    ðŸ“‹ Manuel Preset'ler
                  </h3>
                  <div className="space-y-2">
                    {manualPresets.map((preset) => (
                      <div
                        key={preset.id}
                        className={`border rounded-lg p-4 cursor-pointer transition-all ${
                          selectedId === preset.id
                            ? "border-indigo-500 bg-indigo-50"
                            : "border-gray-200 hover:border-indigo-300 hover:bg-gray-50"
                        }`}
                        onClick={() => setSelectedId(preset.id)}
                      >
                        <div className="flex items-start justify-between">
                          <div className="flex-1">
                            <h4 className="font-medium text-gray-900">
                              {preset.name}
                            </h4>
                            <div className="mt-2 space-y-1">
                              {preset.items.map((item, idx) => (
                                <div
                                  key={idx}
                                  className="text-sm text-gray-600"
                                >
                                  â€¢ {item.besinName} {item.miktar} {item.birim}
                                </div>
                              ))}
                            </div>
                            {preset.usageCount > 0 && (
                              <div className="mt-2 text-xs text-gray-500">
                                {preset.usageCount}Ã— kullanÄ±ldÄ±
                              </div>
                            )}
                          </div>
                          {selectedId === preset.id && (
                            <div className="ml-2">
                              <div className="h-5 w-5 rounded-full bg-indigo-600 flex items-center justify-center">
                                <svg
                                  className="h-3 w-3 text-white"
                                  fill="currentColor"
                                  viewBox="0 0 20 20"
                                >
                                  <path
                                    fillRule="evenodd"
                                    d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                    clipRule="evenodd"
                                  />
                                </svg>
                              </div>
                            </div>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </>
          )}
        </div>

        <div className="flex gap-2 mt-6 pt-4 border-t">
          <Button variant="outline" onClick={onClose} className="flex-1">
            Ä°ptal
          </Button>
          <Button
            onClick={handleSelect}
            disabled={!selectedId}
            className="flex-1 bg-indigo-600 hover:bg-indigo-700"
          >
            Preset'i Kullan
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  );
};
